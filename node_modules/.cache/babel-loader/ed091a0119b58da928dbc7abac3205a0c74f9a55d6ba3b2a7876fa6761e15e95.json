{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\react\\\\6dz\\\\src\\\\Components\\\\TaskList\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport Task from \"../Task/Task\";\nimport { useSelector } from \"react-redux\";\nimport { statusFilters } from \"../../Redux/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getVisibleTasks = (tasks, statusFilter) => {\n  switch (statusFilter) {\n    case statusFilters.active:\n      return tasks.filter(task => !task.completed);\n    case statusFilters.completed:\n      return tasks.filter(task => task.completed);\n    default:\n      return tasks;\n  }\n};\nconst TaskList = () => {\n  _s();\n  const tasks = useSelector(state => state.tasks);\n  const statusFilter = useSelector(state => state.filter.status);\n  const visibleTasks = getVisibleTasks(tasks, statusFilter);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: visibleTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Task, {\n        task: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"6B5uPEbUTQDABRiMT/+h8mSwvrk=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["Task","useSelector","statusFilters","jsxDEV","_jsxDEV","getVisibleTasks","tasks","statusFilter","active","filter","task","completed","TaskList","_s","state","status","visibleTasks","children","map","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/react/6dz/src/Components/TaskList/TaskList.js"],"sourcesContent":["import Task from \"../Task/Task\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { statusFilters } from \"../../Redux/constants\";\r\n\r\nconst getVisibleTasks = (tasks, statusFilter) => {\r\n    switch(statusFilter) {\r\n        case statusFilters.active:\r\n            return tasks.filter(task => !task.completed);\r\n        case statusFilters.completed: \r\n            return tasks.filter(task => task.completed);\r\n        default: \r\n            return tasks;\r\n    }\r\n}\r\n\r\nconst TaskList = () => {\r\n    const tasks = useSelector(state => state.tasks);\r\n    const statusFilter = useSelector(state => state.filter.status);\r\n    const visibleTasks = getVisibleTasks(tasks, statusFilter);\r\n\r\n    return (\r\n        <ul>\r\n            {visibleTasks.map(task => (\r\n                <li key={task.id}>\r\n                    <Task task={task} />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,YAAY,KAAK;EAC7C,QAAOA,YAAY;IACf,KAAKL,aAAa,CAACM,MAAM;MACrB,OAAOF,KAAK,CAACG,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,SAAS,CAAC;IAChD,KAAKT,aAAa,CAACS,SAAS;MACxB,OAAOL,KAAK,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;IAC/C;MACI,OAAOL,KAAK;EACpB;AACJ,CAAC;AAED,MAAMM,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMP,KAAK,GAAGL,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACR,KAAK,CAAC;EAC/C,MAAMC,YAAY,GAAGN,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACL,MAAM,CAACM,MAAM,CAAC;EAC9D,MAAMC,YAAY,GAAGX,eAAe,CAACC,KAAK,EAAEC,YAAY,CAAC;EAEzD,oBACIH,OAAA;IAAAa,QAAA,EACKD,YAAY,CAACE,GAAG,CAACR,IAAI,iBAClBN,OAAA;MAAAa,QAAA,eACIb,OAAA,CAACJ,IAAI;QAACU,IAAI,EAAEA;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADfZ,IAAI,CAACa,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb,CAAC;AAAAT,EAAA,CAdKD,QAAQ;EAAA,QACIX,WAAW,EACJA,WAAW;AAAA;AAAAuB,EAAA,GAF9BZ,QAAQ;AAgBd,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}