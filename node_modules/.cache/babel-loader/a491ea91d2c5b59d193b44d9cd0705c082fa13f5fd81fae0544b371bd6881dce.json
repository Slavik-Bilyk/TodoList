{"ast":null,"code":"import { statusFilters } from \"./constants\";\nconst initialState = {\n  tasks: [{\n    id: 0,\n    text: \"Learn HTML and CSS\",\n    completed: true\n  }, {\n    id: 1,\n    text: \"Get good at JavaScript\",\n    completed: true\n  }, {\n    id: 2,\n    text: \"Master React\",\n    completed: false\n  }, {\n    id: 3,\n    text: \"Discover Redux\",\n    completed: false\n  }, {\n    id: 4,\n    text: \"Build amazing apps\",\n    completed: false\n  }],\n  filters: {\n    status: statusFilters.all\n  }\n};\nconst tasksReducer = (state = tasksInitialState, action) => {\n  switch (action.type) {\n    case \"tasks/addTask\":\n      return [...state, action.payload];\n    case \"tasks/deleteTask\":\n      return state.filter(task => task.id !== action.payload);\n    case \"tasks/toggleCompleted\":\n      return state.map(task => {\n        if (task.id !== action.payload) {\n          return task;\n        }\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      });\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["statusFilters","initialState","tasks","id","text","completed","filters","status","all","tasksReducer","state","tasksInitialState","action","type","payload","filter","task","map"],"sources":["C:/Users/user/Documents/react/6dz/src/Redux/reducer.js"],"sourcesContent":["import { statusFilters } from \"./constants\";\r\n\r\nconst initialState = {\r\n  tasks: [\r\n    { id: 0, text: \"Learn HTML and CSS\", completed: true },\r\n    { id: 1, text: \"Get good at JavaScript\", completed: true },\r\n    { id: 2, text: \"Master React\", completed: false },\r\n    { id: 3, text: \"Discover Redux\", completed: false },\r\n    { id: 4, text: \"Build amazing apps\", completed: false },\r\n  ],\r\n  filters: {\r\n    status: statusFilters.all,\r\n  },\r\n};\r\n\r\nconst tasksReducer = (state = tasksInitialState, action) => {\r\n    switch (action.type) {\r\n      case \"tasks/addTask\":\r\n        return [...state, action.payload];\r\n      case \"tasks/deleteTask\":\r\n        return state.filter(task => task.id !== action.payload);\r\n      case \"tasks/toggleCompleted\":\r\n        return state.map(task => {\r\n          if (task.id !== action.payload) {\r\n            return task;\r\n          }\r\n          return { ...task, completed: !task.completed };\r\n        });\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,aAAa;AAE3C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CACL;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,oBAAoB;IAAEC,SAAS,EAAE;EAAK,CAAC,EACtD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,wBAAwB;IAAEC,SAAS,EAAE;EAAK,CAAC,EAC1D;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,cAAc;IAAEC,SAAS,EAAE;EAAM,CAAC,EACjD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,SAAS,EAAE;EAAM,CAAC,EACnD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,oBAAoB;IAAEC,SAAS,EAAE;EAAM,CAAC,CACxD;EACDC,OAAO,EAAE;IACPC,MAAM,EAAEP,aAAa,CAACQ;EACxB;AACF,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGC,iBAAiB,EAAEC,MAAM,KAAK;EACxD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClB,OAAO,CAAC,GAAGH,KAAK,EAAEE,MAAM,CAACE,OAAO,CAAC;IACnC,KAAK,kBAAkB;MACrB,OAAOJ,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACb,EAAE,KAAKS,MAAM,CAACE,OAAO,CAAC;IACzD,KAAK,uBAAuB;MAC1B,OAAOJ,KAAK,CAACO,GAAG,CAACD,IAAI,IAAI;QACvB,IAAIA,IAAI,CAACb,EAAE,KAAKS,MAAM,CAACE,OAAO,EAAE;UAC9B,OAAOE,IAAI;QACb;QACA,OAAO;UAAE,GAAGA,IAAI;UAAEX,SAAS,EAAE,CAACW,IAAI,CAACX;QAAU,CAAC;MAChD,CAAC,CAAC;IACJ;MACE,OAAOK,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}